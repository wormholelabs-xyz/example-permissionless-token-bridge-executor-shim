{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "tokenBridge_",
          "type": "address",
          "internalType": "address"
        },
        { "name": "unwrapWeth_", "type": "bool", "internalType": "bool" },
        { "name": "executor_", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "chainId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decodeTransferWithRelay",
      "inputs": [
        { "name": "encoded", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "transfer",
          "type": "tuple",
          "internalType": "struct TokenBridgeRelayerStructs.TransferWithRelay",
          "components": [
            {
              "name": "targetRecipient",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "denormalizeAmount",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        { "name": "decimals", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "encodeTransferWithRelay",
      "inputs": [
        {
          "name": "transfer",
          "type": "tuple",
          "internalType": "struct TokenBridgeRelayerStructs.TransferWithRelay",
          "components": [
            {
              "name": "targetRecipient",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        }
      ],
      "outputs": [
        { "name": "encoded", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "executeVAAv1",
      "inputs": [
        {
          "name": "encodedTransferMessage",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "executor",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IExecutor" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "fetchLocalAddressFromTransferMessage",
      "inputs": [
        { "name": "payload", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "localAddress", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "normalizeAmount",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        { "name": "decimals", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "tokenBridge",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ITokenBridge"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenBridgeEmitter",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferTokensWithRelay",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        { "name": "targetChain", "type": "uint16", "internalType": "uint16" },
        {
          "name": "targetRecipient",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        { "name": "nonce", "type": "uint32", "internalType": "uint32" },
        {
          "name": "dstTransferRecipient",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "dstExecutionAddress",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "executionAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "refundAddr", "type": "address", "internalType": "address" },
        {
          "name": "signedQuoteBytes",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "relayInstructions",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "messageSequence",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "unwrapWeth",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "weth",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IWETH" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "wormhole",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IWormhole" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "wrapAndTransferEthWithRelay",
      "inputs": [
        { "name": "targetChain", "type": "uint16", "internalType": "uint16" },
        {
          "name": "targetRecipient",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        { "name": "nonce", "type": "uint32", "internalType": "uint32" },
        {
          "name": "dstTransferRecipient",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "dstExecutionAddress",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "executionAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "refundAddr", "type": "address", "internalType": "address" },
        {
          "name": "signedQuoteBytes",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "relayInstructions",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "messageSequence",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "TransferRedeemed",
      "inputs": [
        {
          "name": "emitterChainId",
          "type": "uint16",
          "indexed": true,
          "internalType": "uint16"
        },
        {
          "name": "emitterAddress",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "sequence",
          "type": "uint64",
          "indexed": true,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x61016060409080825234620002e2576060816200218d8038038091620000268285620002e7565b833981010312620002e2576200003c8162000321565b90602092838201519384151592838603620002e257826200005e910162000321565b600160009081556001600160a01b03958616959160049083906200008489151562000336565b16956200009387151562000336565b61010098888a528561012099808b528851948580926315ab88c960e31b82525afa928315620002d8579085929185946200028f575b508360c05260a05262000279575b88518651634d4502c960e11b81529250859183916004918391165afa908115620002305782916200023a575b50608052600483838951168651928380926384acd1bb60e01b82525afa93841562000230578294620001e6575b5050505060e0526101409182525191611e389384620003558539608051848181610743015281816110b30152611a05015260a0518481816105890152818161077f0152610bcf015260c051848181610371015281816104c90152610c96015260e0518481816106f90152818161098001528181610c0f01526117e10152518381816107ff01528181610f97015281816118310152611a5d01525182818161084601526110920152518181816107ba015261103e0152f35b908092939450813d831162000228575b620002028183620002e7565b810103126200022457519182168203620002215750388080806200012f565b80fd5b5080fd5b503d620001f6565b85513d84823e3d90fd5b90508381813d831162000271575b620002548183620002e7565b8101031262000224575161ffff8116810362000224573862000102565b503d62000248565b620002879116151562000336565b3882620000d6565b8780929550819394503d8311620002d0575b620002ad8183620002e7565b81010312620002cc57518481168103620002cc579084919238620000c8565b8380fd5b503d620002a1565b87513d86823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200030b57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620002e257565b156200033e57565b634e487b7160e01b600052600160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806327105ab91461011b57806328ded8e3146101165780632d77e8fe146101115780633fc8cef31461010c57806350789cb51461010757806353c6f0dc14610102578063730a286b146100fd5780637c9dec7a146100f857806384acd1bb146100f35780639a8a0592146100ee5780639cf278cd146100e9578063c34c08e5146100e4578063c6328a46146100df578063d8b32910146100da578063e50e7e72146100d55763ffa1ad740361000e576108f1565b610869565b61082e565b6107e9565b6107a4565b610767565b610728565b6106e3565b6106c2565b61061a565b61046b565b6103f9565b61035b565b610326565b610162565b610130565b60ff81160361012b57565b600080fd5b3461012b57604036600319011261012b57602061015a60243561015281610120565b600435611c62565b604051908152f35b3461012b57604036600319011261012b57602061015a60243561018481610120565b600435611cbe565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b038211176101bd57604052565b61018c565b6001600160401b0381116101bd57604052565b608081019081106001600160401b038211176101bd57604052565b604081019081106001600160401b038211176101bd57604052565b606081019081106001600160401b038211176101bd57604052565b90601f801991011681019081106001600160401b038211176101bd57604052565b6040519061016082018281106001600160401b038211176101bd57604052565b60405190610274826101a2565b565b6040519061010082018281106001600160401b038211176101bd57604052565b6001600160401b0381116101bd57601f01601f191660200190565b9291926102bd82610296565b916102cb6040519384610226565b82948184528183011161012b578281602093846000960137010152565b602060031982011261012b57600435906001600160401b03821161012b578060238301121561012b57816024610323936004013591016102b1565b90565b3461012b57602061033e610339366102e8565b6119ea565b6040516001600160a01b039091168152f35b600091031261012b57565b3461012b57600036600319011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b60005b8381106103b35750506000910152565b81810151838201526020016103a3565b906020916103dc815180928185528580860191016103a0565b601f01601f1916010190565b9060206103239281815201906103c3565b3461012b57602036600319011261012b5761043a61042660405161041c816101a2565b6004358152611d80565b6040519182916020835260208301906103c3565b0390f35b9181601f8401121561012b578235916001600160401b03831161012b576020838186019501011161012b57565b602036600319011261012b576004356001600160401b03811161012b576104be6104ae6104a96104a26104b894369060040161043e565b36916102b1565b6117ae565b9291939093611d97565b51611be8565b6001600160a01b03917f000000000000000000000000000000000000000000000000000000000000000083169190831680831480610586575b156105785750813b1561012b57604051632e1a7d4d60e01b815260048101859052600094909285908490602490829084905af19182156105505785948594859461055f575b5083918315610555575b1690f11561055057005b610af3565b6108fc9250610546565b8061056c610572926101c2565b80610350565b3861053c565b90915061001993925061149c565b507f00000000000000000000000000000000000000000000000000000000000000006104f7565b6001600160a01b0381160361012b57565b60043590610274826105ad565b6101043590610274826105ad565b60c43590610274826105ad565b61ffff81160361012b57565b60443590610274826105e6565b63ffffffff81160361012b57565b60843590610274826105ff565b61016036600319011261012b5761062f6105be565b6106376105f2565b61063f61060d565b916106486105cb565b6001600160401b0392906101243584811161012b5761066b90369060040161043e565b916101443595861161012b5761043a9661068c6106a897369060040161043e565b96909560e4359260c4359260a43592606435916024359061094f565b6040516001600160401b0390911681529081906020820190565b3461012b5760206106da6106d5366102e8565b611d97565b60405190518152f35b3461012b57600036600319011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461012b57600036600319011261012b57602060405161ffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461012b57600036600319011261012b5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b3461012b57600036600319011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461012b57600036600319011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461012b57600036600319011261012b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b61012036600319011261012b57600435610882816105e6565b60443561088e816105ff565b6108966105d9565b916001600160401b039160e43583811161012b576108b890369060040161043e565b906101043594851161012b5761043a956108d96106a896369060040161043e565b95909460a43591608435916064359160243590610bc0565b3461012b57600036600319011261012b5761043a604051610911816101f0565b601881527f546f6b656e42726964676552656c617965722d302e342e30000000000000000060208201526040519182916020835260208301906103c3565b92909b9a9998979695949391600260005414610a9f576002600055604051631a90a21960e01b8152936020856004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa94851561055057600095610a6f575b506109c48886610b15565b34146109cf90610b27565b6109d881611cee565b6109e4819f8290611c62565b906109ee91611cbe565b6109f89082611b75565b90610a01610247565b6001600160a01b0390911681529d8e9060ff1660208201526040015261ffff1660608d015260808c015263ffffffff1660a08b015260c08a015260e08901526101008801526101208701526001600160a01b0316610140860152610a6494610f2a565b906102746001600055565b610a9191955060203d8111610a98575b610a898183610226565b810190610ae4565b93386109b9565b503d610a7f565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9081602091031261012b575190565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b91908201809211610b2257565b610aff565b15610b2e57565b60405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742076616c756560701b6044820152606490fd5b15610b6f57565b606460405162461bcd60e51b815260206004820152602060248201527f574554482066756e6374696f6e616c697479206e6f7420737570706f727465646044820152fd5b91908203918211610b2257565b90999897969594939291610bf37f0000000000000000000000000000000000000000000000000000000000000000610b68565b604051631a90a21960e01b81526001600160a01b039b909283807f00000000000000000000000000000000000000000000000000000000000000008f165a92600491602094fa93841561055057600094610d86575b50610c67610c568886610b15565b610c61813411610b27565b34610bb3565b610c80610c7a6402540be4008304611ca4565b82610bb3565b80158015610d5e575b50610c9391610bb3565b9c7f0000000000000000000000000000000000000000000000000000000000000000169c8d3b1561012b578060008f600460405180948193630d0e30db60e41b83525af1801561055057610d4b575b50610ceb610247565b6001600160a01b03909e168e52601260208f01528d6040015261ffff1660608d015260808c015263ffffffff1660a08b015260c08a015260e08901526101008801526101208701526001600160a01b031661014086015261032394610f2a565b8061056c610d58926101c2565b38610ce2565b8190600090610d7d575b600080809381933390f1156105505738610c89565b506108fc610d68565b610d9f91945060203d8111610a9857610a898183610226565b9238610c48565b15610dad57565b60405162461bcd60e51b8152602060048201526024808201527f746172676574526563697069656e742063616e6e6f74206265206279746573336044820152633228302960e01b6064820152608490fd5b15610e0557565b60405162461bcd60e51b815260206004820152601d60248201527f6e6f726d616c697a656420616d6f756e74206d757374206265203e20300000006044820152606490fd5b51906001600160401b038216820361012b57565b9081602091031261012b5761032390610e4a565b929361ffff60c09563ffffffff9461032399989460018060a01b03168752602087015216604085015260608401521660808201528160a082015201906103c3565b908060209392818452848401376000828201840152601f01601f1916010190565b9694610323989693610f0e9361ffff610f1c9794168a5260208a015260018060a01b0316604089015260c0606089015260c0880191610eb3565b9085820360808701526103c3565b9260a0818503910152610eb3565b94939092916080860195610f4087511515610da6565b610f7c6040820197610f6b610f648a51610f5e602087015160ff1690565b90611c62565b1515610dfe565b51610f74610267565b908152611d80565b81519093906001600160a01b031688516001600160a01b03997f00000000000000000000000000000000000000000000000000000000000000008b169392602092610fc891869061120b565b60c085015185519094906001600160a01b031691516060870195610fee875161ffff1690565b9361102660e08a01519b61100960a08c015163ffffffff1690565b6040516362d2f5ed60e11b81529d8e988997889660048801610e72565b03925af194851561055057600095611121575b5084987f00000000000000000000000000000000000000000000000000000000000000001693611071610120850151935161ffff1690565b916110d761108f61014061010088015197015160018060a01b031690565b977f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611151565b97863b1561012b57600098611103936040519b8c9a8b998a9863c513d43760e01b8a5260048a01610ed4565b03925af18015610550576111145750565b8061056c610274926101c2565b61114391955060203d811161114a575b61113b8183610226565b810190610e5e565b9338611039565b503d611131565b604051634552563160e01b602082015260f09190911b6001600160f01b0319166024820152602681019190915260c09190911b6001600160c01b0319166046820152602e81526103238161020b565b156111a757565b60405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608490fd5b91909181158015611268575b61027493611227611263926111a0565b60405163095ea7b360e01b60208201526001600160a01b039091166024820152604481019390935282606481015b03601f198101845283610226565b6112e6565b50604051636eb1769f60e11b81523060048201526001600160a01b038416602482015292602084806044810103816001600160a01b0386165afa9081156105505761122761126392610274966000916112c8575b50159250509350611217565b6112e0915060203d8111610a9857610a898183610226565b386112bc565b60018060a01b0316906113456040516112fe816101f0565b6020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af161133f6113d7565b91611407565b805180611353575b50505050565b818491810103126113d357820151908115918215036113d057506113795780808061134d565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b80fd5b5080fd5b3d15611402573d906113e882610296565b916113f66040519384610226565b82523d6000602084013e565b606090565b91929015611469575081511561141b575090565b3b156114245790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561147c5750805190602001fd5b60405162461bcd60e51b815290819061149890600483016103e8565b0390fd5b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044820192909252610274916112638260648101611255565b519061027482610120565b5190610274826105ff565b5190610274826105e6565b81601f8201121561012b57805161150c81610296565b9261151a6040519485610226565b8184526020828401011161012b5761032391602080850191016103a0565b9080601f8301121561012b578151916001600160401b0383116101bd5760409182519360209161156d838360051b0187610226565b818652828087019260071b8501019381851161012b578301915b8483106115975750505050505090565b60808383031261012b578360809187516115b0816101d5565b855181528286015183820152888601516115c981610120565b89820152606080870151906115dd82610120565b820152815201920191611587565b9060208282031261012b5781516001600160401b039283821161012b5701906101608282031261012b5761161d610247565b92611627836114d5565b8452611635602084016114e0565b6020850152611646604084016114e0565b6040850152611657606084016114eb565b60608501526080830151608085015261167260a08401610e4a565b60a085015261168360c084016114d5565b60c085015260e083015181811161012b57826116a09185016114f6565b60e08501526101006116b38185016114e0565b90850152610120918284015191821161012b576116d1918401611538565b90830152610140809101519082015290565b9060208282031261012b5781516001600160401b03811161012b5761032392016114f6565b9060208282031261012b5781516001600160401b039283821161012b5701906101008282031261012b5761173a610276565b92611744836114d5565b84526020830151602085015260408301516040850152611766606084016114eb565b60608501526080830151608085015261178160a084016114eb565b60a085015260c083015160c085015260e083015190811161012b576117a692016114f6565b60e082015290565b60405163a9e1189360e01b81529091600091806117ce85600483016103e8565b6001600160a01b039291859183919003817f000000000000000000000000000000000000000000000000000000000000000086165afa908115610550578491611972575b5061182060e08201516119ea565b9361186c8161182e87611d38565b947f000000000000000000000000000000000000000000000000000000000000000016976040518093819263c3f511c160e01b8352600483016103e8565b0381838b5af18015610550576118b4948392839261194a575b506118989061189389611d38565b610bb3565b97604051808097819463ea63738d60e01b8352600483016103e8565b03915afa9182156105505760e0938293611926575b50606081015161ffff16917fcaf280c8cfeba144da67230d9b009c8f868a75bac9a528fa0474be1ba317c16961ffff6001600160401b0361191960a060808701519601516001600160401b031690565b1694169180a40151929190565b6119439193503d8084833e61193b8183610226565b810190611708565b91386118c9565b61189891925061196b903d8086833e6119638183610226565b8101906116e3565b9190611885565b61198e91503d8086833e6119868183610226565b8101906115eb565b38611812565b9081602091031261012b5751610323816105ad565b156119b057565b60405162461bcd60e51b81526020600482015260126024820152711d1bdad95b881b9bdd08185d1d195cdd195960721b6044820152606490fd5b906119fd6119f783611b28565b92611adc565b61ffff8181167f000000000000000000000000000000000000000000000000000000000000000090911614611ad157604051630ff8f14360e11b815261ffff91909116600482015260248101929092526001600160a01b036020836044817f000000000000000000000000000000000000000000000000000000000000000085165afa92831561055057600093611a9d575b5061027490831615156119a9565b610274919350611ac39060203d8111611aca575b611abb8183610226565b810190611994565b9290611a8f565b503d611ab1565b509061032390611be8565b6043815110611aec576043015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606490fd5b6041815110611b38576041015190565b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fd5b90611b7f82611d38565b91604051916323b872dd60e01b602084015233602484015230604484015260648301526064825260a082018281106001600160401b038211176101bd57604052611bdb91611bd6906001600160a01b0383166112e6565b611d38565b908103908111610b225790565b6001600160a01b03198116611c03576001600160a01b031690565b60405162461bcd60e51b8152602060048201526013602482015272696e76616c69642045564d206164647265737360681b6044820152606490fd5b60ff6007199116019060ff8211610b2257565b60ff16604d8111610b2257600a0a90565b90600860ff821611611c72575090565b611c7e611c8391611c3e565b611c51565b908115611c8e570490565b634e487b7160e01b600052601260045260246000fd5b6402540be40090818102918183041490151715610b225790565b90600860ff821611611cce575090565b611c7e611cda91611c3e565b90818102918183041490151715610b225790565b60008091604051602081019063313ce56760e01b825260048152611d11816101f0565b51915afa50611d1e6113d7565b60208180518101031261012b576020015161032381610120565b6000809160405160208101906370a0823160e01b825230602482015260248152611d618161020b565b51915afa50610323611d716113d7565b60208082518301019101610ae4565b5160405190602082015260208152610323816101f0565b9060405191611da5836101a2565b60008352826020825110611b38576020820151905251602003611dc457565b60405162461bcd60e51b81526020600482015260166024820152750d2dcecc2d8d2c840dacae6e6c2ceca40d8cadccee8d60531b6044820152606490fdfea26469706673582212206470f91057fac332a82d96b6eb13d395618d951a69d3a14c2ea4c319febc1d4264736f6c63430008130033",
    "sourceMap": "1033:15897:33:-:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:22;-1:-1:-1;1716:1:22;;;-1:-1:-1;;;;;1033:15897:33;;;;;2187:18;;1033:15897;;1965:34;1972:26;;;1965:34;:::i;:::-;1033:15897;2016:23;2009:31;2016:23;;;2009:31;:::i;:::-;2051:49;;;;;2110:60;;;;;;1033:15897;;;;;;;;;2187:18;;;;;;;;;;;;;;;;;-1:-1:-1;2180:25:33;;;;1033:15897;2215:24;2250:76;;-1:-1:-1;1033:15897:33;;;;-1:-1:-1;;;2346:21:33;;1033:15897;-1:-1:-1;1033:15897:33;;;;2187:18;;1033:15897;;;2346:21;;;;;;;;;;;-1:-1:-1;2336:31:33;;;2187:18;1033:15897;;;;;;;;;;;;;;2388:22;;;;;;;;;;;;;-1:-1:-1;2377:33:33;;;;1033:15897;2377:33;2421:40;;;;1033:15897;;;;;;;;2336:31;1033:15897;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:25;1033:15897;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2388:22;;;;;;;;;;;;;;;;;;:::i;:::-;;;1033:15897;;;;;;;;;;;;2388:22;;;;;;;1033:15897;;;;;;;2388:22;;;;;;1033:15897;;;;;;;;;2346:21;;;;;;;;;;;;;;;;:::i;:::-;;;1033:15897;;;;;;;;;;;;2346:21;;;;;;;;2250:76;2280:35;1033:15897;;2287:27;;2280:35;:::i;:::-;2250:76;;;;2187:18;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1033:15897;;;;;;;;;;;;2187:18;;;;;;;1033:15897;;;;2187:18;;;;;;1033:15897;;;;;;;;;;-1:-1:-1;1033:15897:33;;;;;;;-1:-1:-1;;1033:15897:33;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806327105ab91461011b57806328ded8e3146101165780632d77e8fe146101115780633fc8cef31461010c57806350789cb51461010757806353c6f0dc14610102578063730a286b146100fd5780637c9dec7a146100f857806384acd1bb146100f35780639a8a0592146100ee5780639cf278cd146100e9578063c34c08e5146100e4578063c6328a46146100df578063d8b32910146100da578063e50e7e72146100d55763ffa1ad740361000e576108f1565b610869565b61082e565b6107e9565b6107a4565b610767565b610728565b6106e3565b6106c2565b61061a565b61046b565b6103f9565b61035b565b610326565b610162565b610130565b60ff81160361012b57565b600080fd5b3461012b57604036600319011261012b57602061015a60243561015281610120565b600435611c62565b604051908152f35b3461012b57604036600319011261012b57602061015a60243561018481610120565b600435611cbe565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b038211176101bd57604052565b61018c565b6001600160401b0381116101bd57604052565b608081019081106001600160401b038211176101bd57604052565b604081019081106001600160401b038211176101bd57604052565b606081019081106001600160401b038211176101bd57604052565b90601f801991011681019081106001600160401b038211176101bd57604052565b6040519061016082018281106001600160401b038211176101bd57604052565b60405190610274826101a2565b565b6040519061010082018281106001600160401b038211176101bd57604052565b6001600160401b0381116101bd57601f01601f191660200190565b9291926102bd82610296565b916102cb6040519384610226565b82948184528183011161012b578281602093846000960137010152565b602060031982011261012b57600435906001600160401b03821161012b578060238301121561012b57816024610323936004013591016102b1565b90565b3461012b57602061033e610339366102e8565b6119ea565b6040516001600160a01b039091168152f35b600091031261012b57565b3461012b57600036600319011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b60005b8381106103b35750506000910152565b81810151838201526020016103a3565b906020916103dc815180928185528580860191016103a0565b601f01601f1916010190565b9060206103239281815201906103c3565b3461012b57602036600319011261012b5761043a61042660405161041c816101a2565b6004358152611d80565b6040519182916020835260208301906103c3565b0390f35b9181601f8401121561012b578235916001600160401b03831161012b576020838186019501011161012b57565b602036600319011261012b576004356001600160401b03811161012b576104be6104ae6104a96104a26104b894369060040161043e565b36916102b1565b6117ae565b9291939093611d97565b51611be8565b6001600160a01b03917f000000000000000000000000000000000000000000000000000000000000000083169190831680831480610586575b156105785750813b1561012b57604051632e1a7d4d60e01b815260048101859052600094909285908490602490829084905af19182156105505785948594859461055f575b5083918315610555575b1690f11561055057005b610af3565b6108fc9250610546565b8061056c610572926101c2565b80610350565b3861053c565b90915061001993925061149c565b507f00000000000000000000000000000000000000000000000000000000000000006104f7565b6001600160a01b0381160361012b57565b60043590610274826105ad565b6101043590610274826105ad565b60c43590610274826105ad565b61ffff81160361012b57565b60443590610274826105e6565b63ffffffff81160361012b57565b60843590610274826105ff565b61016036600319011261012b5761062f6105be565b6106376105f2565b61063f61060d565b916106486105cb565b6001600160401b0392906101243584811161012b5761066b90369060040161043e565b916101443595861161012b5761043a9661068c6106a897369060040161043e565b96909560e4359260c4359260a43592606435916024359061094f565b6040516001600160401b0390911681529081906020820190565b3461012b5760206106da6106d5366102e8565b611d97565b60405190518152f35b3461012b57600036600319011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461012b57600036600319011261012b57602060405161ffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461012b57600036600319011261012b5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b3461012b57600036600319011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461012b57600036600319011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461012b57600036600319011261012b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b61012036600319011261012b57600435610882816105e6565b60443561088e816105ff565b6108966105d9565b916001600160401b039160e43583811161012b576108b890369060040161043e565b906101043594851161012b5761043a956108d96106a896369060040161043e565b95909460a43591608435916064359160243590610bc0565b3461012b57600036600319011261012b5761043a604051610911816101f0565b601881527f546f6b656e42726964676552656c617965722d302e342e30000000000000000060208201526040519182916020835260208301906103c3565b92909b9a9998979695949391600260005414610a9f576002600055604051631a90a21960e01b8152936020856004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa94851561055057600095610a6f575b506109c48886610b15565b34146109cf90610b27565b6109d881611cee565b6109e4819f8290611c62565b906109ee91611cbe565b6109f89082611b75565b90610a01610247565b6001600160a01b0390911681529d8e9060ff1660208201526040015261ffff1660608d015260808c015263ffffffff1660a08b015260c08a015260e08901526101008801526101208701526001600160a01b0316610140860152610a6494610f2a565b906102746001600055565b610a9191955060203d8111610a98575b610a898183610226565b810190610ae4565b93386109b9565b503d610a7f565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9081602091031261012b575190565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b91908201809211610b2257565b610aff565b15610b2e57565b60405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742076616c756560701b6044820152606490fd5b15610b6f57565b606460405162461bcd60e51b815260206004820152602060248201527f574554482066756e6374696f6e616c697479206e6f7420737570706f727465646044820152fd5b91908203918211610b2257565b90999897969594939291610bf37f0000000000000000000000000000000000000000000000000000000000000000610b68565b604051631a90a21960e01b81526001600160a01b039b909283807f00000000000000000000000000000000000000000000000000000000000000008f165a92600491602094fa93841561055057600094610d86575b50610c67610c568886610b15565b610c61813411610b27565b34610bb3565b610c80610c7a6402540be4008304611ca4565b82610bb3565b80158015610d5e575b50610c9391610bb3565b9c7f0000000000000000000000000000000000000000000000000000000000000000169c8d3b1561012b578060008f600460405180948193630d0e30db60e41b83525af1801561055057610d4b575b50610ceb610247565b6001600160a01b03909e168e52601260208f01528d6040015261ffff1660608d015260808c015263ffffffff1660a08b015260c08a015260e08901526101008801526101208701526001600160a01b031661014086015261032394610f2a565b8061056c610d58926101c2565b38610ce2565b8190600090610d7d575b600080809381933390f1156105505738610c89565b506108fc610d68565b610d9f91945060203d8111610a9857610a898183610226565b9238610c48565b15610dad57565b60405162461bcd60e51b8152602060048201526024808201527f746172676574526563697069656e742063616e6e6f74206265206279746573336044820152633228302960e01b6064820152608490fd5b15610e0557565b60405162461bcd60e51b815260206004820152601d60248201527f6e6f726d616c697a656420616d6f756e74206d757374206265203e20300000006044820152606490fd5b51906001600160401b038216820361012b57565b9081602091031261012b5761032390610e4a565b929361ffff60c09563ffffffff9461032399989460018060a01b03168752602087015216604085015260608401521660808201528160a082015201906103c3565b908060209392818452848401376000828201840152601f01601f1916010190565b9694610323989693610f0e9361ffff610f1c9794168a5260208a015260018060a01b0316604089015260c0606089015260c0880191610eb3565b9085820360808701526103c3565b9260a0818503910152610eb3565b94939092916080860195610f4087511515610da6565b610f7c6040820197610f6b610f648a51610f5e602087015160ff1690565b90611c62565b1515610dfe565b51610f74610267565b908152611d80565b81519093906001600160a01b031688516001600160a01b03997f00000000000000000000000000000000000000000000000000000000000000008b169392602092610fc891869061120b565b60c085015185519094906001600160a01b031691516060870195610fee875161ffff1690565b9361102660e08a01519b61100960a08c015163ffffffff1690565b6040516362d2f5ed60e11b81529d8e988997889660048801610e72565b03925af194851561055057600095611121575b5084987f00000000000000000000000000000000000000000000000000000000000000001693611071610120850151935161ffff1690565b916110d761108f61014061010088015197015160018060a01b031690565b977f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611151565b97863b1561012b57600098611103936040519b8c9a8b998a9863c513d43760e01b8a5260048a01610ed4565b03925af18015610550576111145750565b8061056c610274926101c2565b61114391955060203d811161114a575b61113b8183610226565b810190610e5e565b9338611039565b503d611131565b604051634552563160e01b602082015260f09190911b6001600160f01b0319166024820152602681019190915260c09190911b6001600160c01b0319166046820152602e81526103238161020b565b156111a757565b60405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608490fd5b91909181158015611268575b61027493611227611263926111a0565b60405163095ea7b360e01b60208201526001600160a01b039091166024820152604481019390935282606481015b03601f198101845283610226565b6112e6565b50604051636eb1769f60e11b81523060048201526001600160a01b038416602482015292602084806044810103816001600160a01b0386165afa9081156105505761122761126392610274966000916112c8575b50159250509350611217565b6112e0915060203d8111610a9857610a898183610226565b386112bc565b60018060a01b0316906113456040516112fe816101f0565b6020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af161133f6113d7565b91611407565b805180611353575b50505050565b818491810103126113d357820151908115918215036113d057506113795780808061134d565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b80fd5b5080fd5b3d15611402573d906113e882610296565b916113f66040519384610226565b82523d6000602084013e565b606090565b91929015611469575081511561141b575090565b3b156114245790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561147c5750805190602001fd5b60405162461bcd60e51b815290819061149890600483016103e8565b0390fd5b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044820192909252610274916112638260648101611255565b519061027482610120565b5190610274826105ff565b5190610274826105e6565b81601f8201121561012b57805161150c81610296565b9261151a6040519485610226565b8184526020828401011161012b5761032391602080850191016103a0565b9080601f8301121561012b578151916001600160401b0383116101bd5760409182519360209161156d838360051b0187610226565b818652828087019260071b8501019381851161012b578301915b8483106115975750505050505090565b60808383031261012b578360809187516115b0816101d5565b855181528286015183820152888601516115c981610120565b89820152606080870151906115dd82610120565b820152815201920191611587565b9060208282031261012b5781516001600160401b039283821161012b5701906101608282031261012b5761161d610247565b92611627836114d5565b8452611635602084016114e0565b6020850152611646604084016114e0565b6040850152611657606084016114eb565b60608501526080830151608085015261167260a08401610e4a565b60a085015261168360c084016114d5565b60c085015260e083015181811161012b57826116a09185016114f6565b60e08501526101006116b38185016114e0565b90850152610120918284015191821161012b576116d1918401611538565b90830152610140809101519082015290565b9060208282031261012b5781516001600160401b03811161012b5761032392016114f6565b9060208282031261012b5781516001600160401b039283821161012b5701906101008282031261012b5761173a610276565b92611744836114d5565b84526020830151602085015260408301516040850152611766606084016114eb565b60608501526080830151608085015261178160a084016114eb565b60a085015260c083015160c085015260e083015190811161012b576117a692016114f6565b60e082015290565b60405163a9e1189360e01b81529091600091806117ce85600483016103e8565b6001600160a01b039291859183919003817f000000000000000000000000000000000000000000000000000000000000000086165afa908115610550578491611972575b5061182060e08201516119ea565b9361186c8161182e87611d38565b947f000000000000000000000000000000000000000000000000000000000000000016976040518093819263c3f511c160e01b8352600483016103e8565b0381838b5af18015610550576118b4948392839261194a575b506118989061189389611d38565b610bb3565b97604051808097819463ea63738d60e01b8352600483016103e8565b03915afa9182156105505760e0938293611926575b50606081015161ffff16917fcaf280c8cfeba144da67230d9b009c8f868a75bac9a528fa0474be1ba317c16961ffff6001600160401b0361191960a060808701519601516001600160401b031690565b1694169180a40151929190565b6119439193503d8084833e61193b8183610226565b810190611708565b91386118c9565b61189891925061196b903d8086833e6119638183610226565b8101906116e3565b9190611885565b61198e91503d8086833e6119868183610226565b8101906115eb565b38611812565b9081602091031261012b5751610323816105ad565b156119b057565b60405162461bcd60e51b81526020600482015260126024820152711d1bdad95b881b9bdd08185d1d195cdd195960721b6044820152606490fd5b906119fd6119f783611b28565b92611adc565b61ffff8181167f000000000000000000000000000000000000000000000000000000000000000090911614611ad157604051630ff8f14360e11b815261ffff91909116600482015260248101929092526001600160a01b036020836044817f000000000000000000000000000000000000000000000000000000000000000085165afa92831561055057600093611a9d575b5061027490831615156119a9565b610274919350611ac39060203d8111611aca575b611abb8183610226565b810190611994565b9290611a8f565b503d611ab1565b509061032390611be8565b6043815110611aec576043015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606490fd5b6041815110611b38576041015190565b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fd5b90611b7f82611d38565b91604051916323b872dd60e01b602084015233602484015230604484015260648301526064825260a082018281106001600160401b038211176101bd57604052611bdb91611bd6906001600160a01b0383166112e6565b611d38565b908103908111610b225790565b6001600160a01b03198116611c03576001600160a01b031690565b60405162461bcd60e51b8152602060048201526013602482015272696e76616c69642045564d206164647265737360681b6044820152606490fd5b60ff6007199116019060ff8211610b2257565b60ff16604d8111610b2257600a0a90565b90600860ff821611611c72575090565b611c7e611c8391611c3e565b611c51565b908115611c8e570490565b634e487b7160e01b600052601260045260246000fd5b6402540be40090818102918183041490151715610b225790565b90600860ff821611611cce575090565b611c7e611cda91611c3e565b90818102918183041490151715610b225790565b60008091604051602081019063313ce56760e01b825260048152611d11816101f0565b51915afa50611d1e6113d7565b60208180518101031261012b576020015161032381610120565b6000809160405160208101906370a0823160e01b825230602482015260248152611d618161020b565b51915afa50610323611d716113d7565b60208082518301019101610ae4565b5160405190602082015260208152610323816101f0565b9060405191611da5836101a2565b60008352826020825110611b38576020820151905251602003611dc457565b60405162461bcd60e51b81526020600482015260166024820152750d2dcecc2d8d2c840dacae6e6c2ceca40d8cadccee8d60531b6044820152606490fdfea26469706673582212206470f91057fac332a82d96b6eb13d395618d951a69d3a14c2ea4c319febc1d4264736f6c63430008130033",
    "sourceMap": "1033:15897:33:-:0;;;;;;;;;-1:-1:-1;1033:15897:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;1033:15897:33;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1033:15897:33;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;:::o;:::-;;:::i;:::-;-1:-1:-1;;;;;1033:15897:33;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;:::o;:::-;-1:-1:-1;;;;;1033:15897:33;;;;;;-1:-1:-1;;1033:15897:33;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1033:15897:33;;;;;;:::o;:::-;;-1:-1:-1;;1033:15897:33;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1033:15897:33;;;;;;1498:27;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;;;-1:-1:-1;;1033:15897:33;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1033:15897:33;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1033:15897:33;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1033:15897:33;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;12481:51;12196:41;1033:15897;;12358:32;1033:15897;;;;;;:::i;:::-;;;;:::i;:::-;12196:41;:::i;:::-;12358:32;;;;;;:::i;:::-;1033:15897;12481:51;:::i;:::-;-1:-1:-1;;;;;1033:15897:33;12617:4;1033:15897;;;;;;12600:22;;;;:36;;1033:15897;12596:279;;;12707:21;;;;;;1033:15897;;-1:-1:-1;;;12707:21:33;;1033:15897;12707:21;;1033:15897;;;-1:-1:-1;;1033:15897:33;;-1:-1:-1;;1033:15897:33;;;;;;-1:-1:-1;;12707:21:33;;;;;;;;;;;;;;;12596:279;12742:35;;;;;;;12596:279;1033:15897;12742:35;;;;;1033:15897;12742:35;;:::i;:::-;;;-1:-1:-1;12742:35:33;;12707:21;;;;;;:::i;:::-;;;:::i;:::-;;;;12596:279;12857:6;;;;;;;;:::i;12600:36::-;12626:10;;12600:36;;1033:15897;-1:-1:-1;;;;;1033:15897:33;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;1033:15897:33;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;4379:22;1033:15897;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4379:22;;:::i;:::-;1033:15897;;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;1033:15897:33;;;;;;1585:35;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;-1:-1:-1;;1033:15897:33;;;;;;;;1335:31;1033:15897;;;;;;;;;;-1:-1:-1;;1033:15897:33;;;;;;;1423:32;1033:15897;;;;;;;;;;;-1:-1:-1;;1033:15897:33;;;;;;1842:35;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;-1:-1:-1;;1033:15897:33;;;;;;1692:41;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;-1:-1:-1;;1033:15897:33;;;;;;;1739:43;1033:15897;;;;;;-1:-1:-1;;1033:15897:33;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1033:15897:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;2227:103:22:-;;;;;;;;;;;;;1759:1;1033:15897:33;;2468:19:22;1759:1;;;1033:15897:33;1759:1:22;1033:15897:33;;-1:-1:-1;;;4562:21:33;;1033:15897;4562:21;1033:15897;4562:21;1033:15897;4562:8;-1:-1:-1;;;;;1033:15897:33;4562:21;;;;;;;1033:15897;4562:21;;;2227:103:22;4614:29:33;;;;;:::i;:::-;4601:9;:42;4593:73;;;:::i;:::-;4851:18;;;:::i;:::-;4906:38;;;;;;:::i;:::-;4888:72;;;;:::i;:::-;5099:28;;;;:::i;:::-;1033:15897;;;:::i;:::-;-1:-1:-1;;;;;1033:15897:33;;;;;5257:518;;;1033:15897;;4562:21;5257:518;;1033:15897;;5257:518;1033:15897;;;5257:518;;;1033:15897;5257:518;;;1033:15897;;;;5257:518;;1033:15897;5257:518;;;1033:15897;;5257:518;;1033:15897;5257:518;;;1033:15897;5257:518;;;1033:15897;-1:-1:-1;;;;;1033:15897:33;5257:518;;;1033:15897;5219:627;;;:::i;:::-;2292:1:22;;1716;2809:22;1759:1;2629:209;4562:21:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1759:1:22;1033:15897:33;;-1:-1:-1;;;1759:1:22;;;;;;;;;;;1033:15897:33;1759:1:22;1033:15897:33;;;1759:1:22;;;;1033:15897:33;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;:::o;:::-;;;;1759:1:22;;;1033:15897:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6533:1986::-;;;;;;;;;;;6936:55;6944:10;6936:55;:::i;:::-;1033:15897;;-1:-1:-1;;;7151:21:33;;-1:-1:-1;;;;;1033:15897:33;;;;;7151:8;1033:15897;;7151:21;;;;;;;;;;;;;;;;6533:1986;7197:29;7393:16;7197:29;;;;:::i;:::-;7236:47;7244:9;;:16;7236:47;:::i;:::-;7244:9;7393:16;:::i;:::-;7458:59;7467:50;1033:15897;;;7467:50;:::i;:::-;7458:59;;:::i;:::-;7531:8;;;;7527:73;;6533:1986;7685:13;;;;:::i;:::-;7751:4;;1033:15897;7751:37;;;;;;1033:15897;7151:21;1033:15897;7151:21;1033:15897;;;;;;;;;7751:37;;;;;;;;;;6533:1986;1033:15897;;;:::i;:::-;-1:-1:-1;;;;;1033:15897:33;;;;;;7151:21;7918:523;;1033:15897;7918:523;1033:15897;7918:523;1033:15897;;;7918:523;;;1033:15897;7918:523;;;1033:15897;;;;7918:523;;1033:15897;7918:523;;;1033:15897;;7918:523;;1033:15897;7918:523;;;1033:15897;7918:523;;;1033:15897;-1:-1:-1;;;;;1033:15897:33;7918:523;;;1033:15897;7880:632;;;:::i;7751:37::-;;;;;;:::i;:::-;;;;7527:73;7555:34;;7151:21;7555:34;;;7527:73;7151:21;7563:10;;;;;;7555:34;;;;;7527:73;;;7555:34;-1:-1:-1;7555:34:33;;;7151:21;;;;;;;;;;;;;;;:::i;:::-;;;;;1033:15897;;;;:::o;:::-;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;;;;;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1033:15897:33;;;;;;;;-1:-1:-1;;1033:15897:33;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;8525:2361::-;;;;;;8797:22;;;1033:15897;8789:85;1033:15897;;8797:36;;8789:85;:::i;:::-;9771;9153:13;;;1033:15897;9199:62;9137:52;1033:15897;;;9168:20;;;1033:15897;;;;;;9137:52;;:::i;:::-;9207:20;;9199:62;:::i;:::-;1033:15897;;;:::i;:::-;;;;9771:85;:::i;:::-;1033:15897;;;;;-1:-1:-1;;;;;1033:15897:33;;;-1:-1:-1;;;;;1033:15897:33;9985:11;1033:15897;;;;9168:20;;9999:13;;1033:15897;;9999:13;:::i;:::-;10396:18;;;1033:15897;;;;;;-1:-1:-1;;;;;1033:15897:33;;;10458:18;;;1033:15897;;;;;;;;;10478:27;10351:194;10478:27;;;1033:15897;10507:12;1033:15897;;10507:12;;1033:15897;;;;;;9153:13;1033:15897;-1:-1:-1;;;10351:194:33;;1033:15897;;;;;;;10351:194;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;10351:194:33;;;8525:2361;10333:212;;10556:8;;1033:15897;10589:22;1033:15897;10589:22;;;1033:15897;;;;;;;;10658:26;10759:79;1033:15897;10698:17;10658:26;;;1033:15897;10698:17;;1033:15897;;;;;;;;;;10802:18;;10793:7;10759:79;:::i;:::-;10556:323;;;;;;-1:-1:-1;1033:15897:33;10556:323;1033:15897;9153:13;1033:15897;;;;;;;;;;;10556:323;;10351:194;10556:323;;;:::i;:::-;;;;;;;;;;;8525:2361;:::o;10556:323::-;;;;;;:::i;10351:194::-;;;;;9168:20;10351:194;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1584:245:2;1033:15897:33;;-1:-1:-1;;;1754:68:2;;;178:6;;;;;;-1:-1:-1;;;;;;178:6:2;;;;;;;;1033:15897:33;;;;178:6:2;;;;;-1:-1:-1;;;;;;178:6:2;;;;;1754:68;;;;1033:15897:33;1754:68:2;:::i;1033:15897:33:-;;;;:::o;:::-;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;;;;;;;-1:-1:-1;;;1033:15897:33;;;;;;;1475:603:25;;;;1830:10;;1829:62;;;;1475:603;2008:62;1808:163;;2008:62;1808:163;;:::i;:::-;1033:15897:33;;-1:-1:-1;;;2008:62:25;;;;-1:-1:-1;;;;;1033:15897:33;;;2008:62:25;;;1033:15897:33;;;;;;;;;;;;2008:62:25;;1033:15897:33;;2008:62:25;;;;;;:::i;:::-;;:::i;1829:::-;-1:-1:-1;1033:15897:33;;-1:-1:-1;;;1846:39:25;;1870:4;1846:39;;;1033:15897:33;-1:-1:-1;;;;;1033:15897:33;;;;;;;1846:39:25;1033:15897:33;;;;;1846:39:25;1033:15897:33;-1:-1:-1;;;;;1033:15897:33;;1846:39:25;;;;;;;1808:163;2008:62;1846:39;2008:62;1846:39;1839:1;1846:39;;;1829:62;1846:44;;1829:62;;;;;;;1846:39;;;;;;;;;;;;;;:::i;:::-;;;;3747:706;1033:15897:33;;;;;;;5330:69:26;1033:15897:33;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;5282:31:26;;;;;;;;;;;;;;:::i;:::-;5330:69;;:::i;:::-;1033:15897:33;;4275:21:25;4271:176;;3747:706;;;;;:::o;4271:176::-;4359:30;;;;;1033:15897:33;;;;4359:30:25;;1033:15897:33;;;;;;;;;;;;;4271:176:25;;;;;1033:15897:33;;;;;1759:1:22;;;;1033:15897:33;;;;;;;;;;;;;;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1033:15897:33;;;;:::o;:::-;;;:::o;7466:628:26:-;;;;7670:418;;;1033:15897:33;;;7701:22:26;7697:286;;7996:17;;:::o;7697:286::-;1465:19;:23;1033:15897:33;;7996:17:26;:::o;1033:15897:33:-;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;;;;;;;;;;7670:418:26;1033:15897:33;;;;-1:-1:-1;8775:21:26;:17;;8947:142;;;;;;;8771:379;1033:15897:33;;-1:-1:-1;;;9119:20:26;;1033:15897:33;;;9119:20:26;;;;;;:::i;:::-;;;;763:205:25;1033:15897:33;;-1:-1:-1;;;902:58:25;;;;-1:-1:-1;;;;;1033:15897:33;;;902:58:25;;;1033:15897:33;;;;;;;;902:58:25;;;1033:15897:33;;;;902:58:25;1033:15897:33;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;12887:2180::-;1033:15897;;-1:-1:-1;;;13456:40:33;;12887:2180;;13456:40;;1033:15897;13456:40;12887:2180;13456:40;;;;:::i;:::-;-1:-1:-1;;;;;1033:15897:33;;;;;;13456:40;;1033:15897;13456:8;1033:15897;;13456:40;;;;;;;;;;;12887:2180;13966:21;13929:59;1033:15897;13966:21;;;13929:59;:::i;:::-;14079:29;14372:63;14079:29;;;;:::i;:::-;14372:11;;1033:15897;;;;;;;;;;;14372:63;;13456:40;14372:63;;;:::i;:::-;;;;;;;;;;;14743:53;14372:63;;;;;;;12887:2180;14552:29;:45;:29;;;;:::i;:::-;:45;:::i;:::-;1033:15897;;;;;;;;;;;14743:53;;13456:40;14743:53;;;:::i;:::-;;;;;;;;;;1033:15897;14743:53;;;;;12887:2180;-1:-1:-1;14906:28:33;;;1033:15897;;;14936:28;14889:100;1033:15897;-1:-1:-1;;;;;1033:15897:33;;14936:28;;;1033:15897;14966:22;;1033:15897;-1:-1:-1;;;;;1033:15897:33;;;;;;;14889:100;;;15008:16;;15000:60;;12887:2180;:::o;14743:53::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;14372:63;14552:45;14372:63;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;13456:40;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;1033:15897;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;;-1:-1:-1;;;1033:15897:33;;;;;;;15449:793;;15699:20;15648:21;;;:::i;:::-;15699:20;;:::i;:::-;1033:15897;;;;15855:7;1033:15897;;;15841:21;1033:15897;;;;-1:-1:-1;;;15947:51:33;;1033:15897;;;;;15947:51;;;1033:15897;;;;;;;;-1:-1:-1;;;;;15947:51:33;1033:15897;;;15947:11;1033:15897;;15947:51;;;;;;;-1:-1:-1;15947:51:33;;;15837:399;15932:66;16012:57;15932:66;;1033:15897;16020:26;;16012:57;:::i;15947:51::-;16012:57;15947:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;15837:399;16194:31;;;;;:::i;12641:305:32:-;1033:15897:33;;;12745:27:32;1033:15897:33;;;12833:81:32;;12641:305;:::o;1033:15897:33:-;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;;-1:-1:-1;;;1033:15897:33;;;;;;;14520:320:32;1033:15897:33;;;14626:28:32;1033:15897:33;;;14720:85:32;;14520:320;:::o;1033:15897:33:-;;;-1:-1:-1;;;1033:15897:33;;14652:2:32;1033:15897:33;;;;;;;;;-1:-1:-1;;;1033:15897:33;;;;;;;16248:395;;16414:17;;;:::i;:::-;1033:15897;;;;;;;1139:68:25;;;;16510:10:33;1139:68:25;;;1033:15897:33;16530:4;1033:15897;;;;;;;;;1139:68:25;;1033:15897:33;;;;;;-1:-1:-1;;;;;1033:15897:33;;;;;;;16603:17;;1139:68:25;;-1:-1:-1;;;;;1033:15897:33;;1139:68:25;:::i;:::-;16603:17:33;:::i;:::-;1033:15897;;;;;;;;16248:395;:::o;16649:199::-;-1:-1:-1;;;;;;1033:15897:33;;;;-1:-1:-1;;;;;1033:15897:33;;16649:199::o;1033:15897::-;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;;-1:-1:-1;;;1033:15897:33;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;171:199:34:-;;283:1;1033:15897:33;;;272:12:34;268:73;;350:13;171:199;:::o;268:73::-;317:12;310:20;317:12;;:::i;:::-;310:20;:::i;:::-;1033:15897:33;;;;;;171:199:34;:::o;1033:15897:33:-;;;;-1:-1:-1;1033:15897:33;;;;;-1:-1:-1;1033:15897:33;376:201:34;1033:15897:33;;;;;;;;;;;;;;;;376:201:34;:::o;:::-;;490:1;1033:15897:33;;;479:12:34;475:73;;557:13;376:201;:::o;475:73::-;524:12;517:20;524:12;;:::i;517:20::-;1033:15897:33;;;;;;;;;;;;;;;376:201:34;:::o;583:226::-;711:37;583:226;;1033:15897:33;;711:37:34;;;;;;;;;;;;;;;:::i;:::-;694:55;;;;;;;:::i;:::-;711:37;1033:15897:33;;;766:36:34;;1033:15897:33;;;;711:37:34;766:36;1033:15897:33;;;;:::i;815:340:34:-;-1:-1:-1;815:340:34;;1033:15897:33;;1026:64:34;;;1049:25;;;;1026:64;;1084:4;1026:64;;;1033:15897:33;1026:64:34;;;;;;:::i;:::-;1009:82;;;;;1111:37;1009:82;;:::i;:::-;1026:64;1033:15897:33;;;1111:37:34;;;;;;:::i;451:180:35:-;1033:15897:33;;;582:42:35;;;;1033:15897:33;582:42:35;;;;;;:::i;910:362::-;;1033:15897:33;;;;;;:::i;:::-;-1:-1:-1;1033:15897:33;;986:33:35;14652:2:32;1033:15897:33;;14626:28:32;1033:15897:33;;14652:2:32;14720:85;;;1033:15897:33;;;14652:2:32;1215:23:35;1033:15897:33;;910:362:35:o;1033:15897:33:-;;;-1:-1:-1;;;1033:15897:33;;14652:2:32;1033:15897:33;;;;;;;;;-1:-1:-1;;;1033:15897:33;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "37783": [
        { "start": 1859, "length": 32 },
        { "start": 4275, "length": 32 },
        { "start": 6661, "length": 32 }
      ],
      "37785": [
        { "start": 1417, "length": 32 },
        { "start": 1919, "length": 32 },
        { "start": 3023, "length": 32 }
      ],
      "37788": [
        { "start": 881, "length": 32 },
        { "start": 1225, "length": 32 },
        { "start": 3222, "length": 32 }
      ],
      "37791": [
        { "start": 1785, "length": 32 },
        { "start": 2432, "length": 32 },
        { "start": 3087, "length": 32 },
        { "start": 6113, "length": 32 }
      ],
      "37794": [
        { "start": 2047, "length": 32 },
        { "start": 3991, "length": 32 },
        { "start": 6193, "length": 32 },
        { "start": 6749, "length": 32 }
      ],
      "37796": [
        { "start": 2118, "length": 32 },
        { "start": 4242, "length": 32 }
      ],
      "37799": [
        { "start": 1978, "length": 32 },
        { "start": 4158, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "VERSION()": "ffa1ad74",
    "chainId()": "9a8a0592",
    "decodeTransferWithRelay(bytes)": "7c9dec7a",
    "denormalizeAmount(uint256,uint8)": "28ded8e3",
    "encodeTransferWithRelay((bytes32))": "50789cb5",
    "executeVAAv1(bytes)": "53c6f0dc",
    "executor()": "c34c08e5",
    "fetchLocalAddressFromTransferMessage(bytes)": "2d77e8fe",
    "normalizeAmount(uint256,uint8)": "27105ab9",
    "tokenBridge()": "c6328a46",
    "tokenBridgeEmitter()": "d8b32910",
    "transferTokensWithRelay(address,uint256,uint16,bytes32,uint32,bytes32,bytes32,uint256,address,bytes,bytes)": "730a286b",
    "unwrapWeth()": "9cf278cd",
    "weth()": "3fc8cef3",
    "wormhole()": "84acd1bb",
    "wrapAndTransferEthWithRelay(uint16,bytes32,uint32,bytes32,bytes32,uint256,address,bytes,bytes)": "e50e7e72"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenBridge_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"unwrapWeth_\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"executor_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"name\":\"TransferRedeemed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"decodeTransferWithRelay\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"targetRecipient\",\"type\":\"bytes32\"}],\"internalType\":\"struct TokenBridgeRelayerStructs.TransferWithRelay\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"denormalizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"targetRecipient\",\"type\":\"bytes32\"}],\"internalType\":\"struct TokenBridgeRelayerStructs.TransferWithRelay\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"encodeTransferWithRelay\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTransferMessage\",\"type\":\"bytes\"}],\"name\":\"executeVAAv1\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"contract IExecutor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"fetchLocalAddressFromTransferMessage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"localAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"normalizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridgeEmitter\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"dstTransferRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dstExecutionAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"executionAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signedQuoteBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"relayInstructions\",\"type\":\"bytes\"}],\"name\":\"transferTokensWithRelay\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"messageSequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapWeth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"dstTransferRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dstExecutionAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"executionAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signedQuoteBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"relayInstructions\",\"type\":\"bytes\"}],\"name\":\"wrapAndTransferEthWithRelay\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"messageSequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"TransferRedeemed(uint16,bytes32,uint64)\":{\"params\":{\"emitterAddress\":\"Address (bytes32 zero-left-padded) of emitter on the source chain\",\"emitterChainId\":\"Wormhole chain ID of emitter contract on the source chain\",\"sequence\":\"Sequence of the Wormhole message\"}}},\"kind\":\"dev\",\"methods\":{\"decodeTransferWithRelay(bytes)\":{\"details\":\"reverts if: - the length of the payload has an unexpected length\",\"params\":{\"encoded\":\"Encoded `TransferWithRelay` struct.\"},\"returns\":{\"transfer\":\"`TransferTokenRelay` struct.\"}},\"encodeTransferWithRelay((bytes32))\":{\"params\":{\"transfer\":\"TransferWithRelay struct.\"},\"returns\":{\"encoded\":\"TransferWithRelay struct encoded into bytes.\"}},\"executeVAAv1(bytes)\":{\"details\":\"reverts if: - the transferred token is not accepted by this contract - the transferred token is not attested on this blockchain's Token Bridge contract - the emitter of the transfer message is not registered with this contract - the relayer fails to provide enough native assets to facilitate a native swap - the recipient attempts to swap native assets when performing a self redemption\",\"params\":{\"encodedTransferMessage\":\"Attested `TransferWithPayload` wormhole message.\"}},\"fetchLocalAddressFromTransferMessage(bytes)\":{\"params\":{\"payload\":\"Encoded `TransferWithPayload` message\"},\"returns\":{\"localAddress\":\"Address of the encoded (bytes32 format) token address on this chain.\"}},\"transferTokensWithRelay(address,uint256,uint16,bytes32,uint32,bytes32,bytes32,uint256,address,bytes,bytes)\":{\"params\":{\"amount\":\"Quantity of tokens to be transferred.\",\"dstExecutionAddress\":\"Executor destination address\",\"dstTransferRecipient\":\"Token Bridge payload 3 recipient\",\"executionAmount\":\"msg.value to be sent to the execution payee\",\"nonce\":\"Wormhole message nonce\",\"refundAddr\":\"Executor refund address on this chain\",\"relayInstructions\":\"Executor relay instructions\",\"signedQuoteBytes\":\"Executor signed quote\",\"targetChain\":\"Wormhole chain ID of the target blockchain.\",\"targetRecipient\":\"User's wallet address on the target blockchain in bytes32 format (zero-left-padded).\",\"token\":\"ERC20 token address to transfer cross chain.\"},\"returns\":{\"messageSequence\":\"Wormhole sequence for emitted TransferTokensWithRelay message.\"}},\"wrapAndTransferEthWithRelay(uint16,bytes32,uint32,bytes32,bytes32,uint256,address,bytes,bytes)\":{\"params\":{\"nonce\":\"Wormhole message nonce\",\"targetChain\":\"Wormhole chain ID of the target blockchain.\",\"targetRecipient\":\"User's wallet address on the target blockchain in bytes32 format (zero-left-padded).\"},\"returns\":{\"messageSequence\":\"Wormhole sequence for emitted TransferTokensWithRelay message.\"}}},\"title\":\"Wormhole Token Bridge Relayer\",\"version\":1},\"userdoc\":{\"events\":{\"TransferRedeemed(uint16,bytes32,uint64)\":{\"notice\":\"Emitted when a transfer is completed by the Wormhole token bridge\"}},\"kind\":\"user\",\"methods\":{\"decodeTransferWithRelay(bytes)\":{\"notice\":\"Decodes an encoded `TransferWithRelay` struct.\"},\"encodeTransferWithRelay((bytes32))\":{\"notice\":\"Encodes the TransferWithRelay struct into bytes.\"},\"executeVAAv1(bytes)\":{\"notice\":\"Calls Wormhole's Token Bridge contract to complete token transfers. Takes custody of the wrapped (or released) tokens and sends the tokens to the target recipient. It pays the fee recipient in the minted token denomination. If requested by the user, it will perform a swap with the off-chain relayer to provide the user with native assets. If the `token` being transferred is WETH, the contract will unwrap native assets and send the transferred amount to the recipient and pay the fee recipient in native assets.\"},\"fetchLocalAddressFromTransferMessage(bytes)\":{\"notice\":\"Parses the encoded address and chainId from a `TransferWithPayload` message. Finds the address of the wrapped token contract if the token is not native to this chain.\"},\"transferTokensWithRelay(address,uint256,uint16,bytes32,uint32,bytes32,bytes32,uint256,address,bytes,bytes)\":{\"notice\":\"Calls Wormhole's Token Bridge contract to emit a contract-controlled transfer. The transfer message includes the target recipient on the destination chain.\"},\"wrapAndTransferEthWithRelay(uint16,bytes32,uint32,bytes32,bytes32,uint256,address,bytes,bytes)\":{\"notice\":\"Wraps Ether and calls Wormhole's Token Bridge contract to emit a contract-controlled transfer. The transfer message includes an arbitrary payload with instructions for how to handle relayer payments on the target contract and the quantity of tokens to convert into native assets for the user.\"}},\"notice\":\"This contract composes on Wormhole's Token Bridge contracts to facilitate one-click transfers of Token Bridge supported assets cross chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token-bridge-relayer/TokenBridgeRelayer.sol\":\"TokenBridgeRelayer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":example-messaging-executor/=lib/example-messaging-executor/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/example-messaging-executor/evm/src/interfaces/IExecutor.sol\":{\"keccak256\":\"0xb5c09cce4a0af879f212d1680cd63ef8c370337af5662239168ab8520913b907\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://066dbed44d5ed38e2e19913402a75927729c85b356371858a7de68e8b340ea67\",\"dweb:/ipfs/QmZsQ4KWa8DG3fR3wxBUyfhh2GaxLWrm1C9HmTWHxxGX18\"]},\"lib/example-messaging-executor/evm/src/interfaces/IVaaV1Receiver.sol\":{\"keccak256\":\"0x1c5e70da00f89331617b50a7c81798035101451e687a3107c8f30a5527a8e38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b436befbab84928f5e7b343b0bc6ebcc7f13c229b25c49d68eb622d97f814a1c\",\"dweb:/ipfs/QmYkY6vbeAfx6wbSgtyB16sTjM1wqwkxJtC2Ywamb6qZ2t\"]},\"lib/example-messaging-executor/evm/src/libraries/ExecutorMessages.sol\":{\"keccak256\":\"0x2bb46d5001ab91fef5bdbac8527f869b5e7fc69d4bfde38aa097aca5ec55e282\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bfc98b4770aadb7e694813b0e906ed7b5712a36e162004e1960bb95a5e16eaea\",\"dweb:/ipfs/QmYktKKy49U2mRJVuCe6H22S47raZJzFMkpqtWbHXbd9g9\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0x4ea5e85e7f4bb4ad38953215e34e0c038017d8e63ad7debdaa62866d423454e2\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://cec54d81084ffe9a4062f607558433b6ff7a29205592b10ff6e1ed422ecd6a8f\",\"dweb:/ipfs/QmQZzbxZ1Gvd8ZMysaMGRsZKaJ8nNq1PRn3nZFNfvJ2iss\"]},\"src/interfaces/IWETH.sol\":{\"keccak256\":\"0x0d4de7670ff7a9adbf8a6324857dc8366e8d9de6ad5c79a7b08c3a63a1e74846\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://0476a6e90b24d12f75d3c0a1f389f31eda3e007c8f138c072514f7da5d21c56a\",\"dweb:/ipfs/QmSBCvNwWxY8WYnwHFbQw96b3cjX6mc3VEd8WKGN2cvuoM\"]},\"src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x6e96cd05a4d66c7edcb76c5dec50e1c36c7336eadf9e09d22d18fad99d784b71\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f0347c8b807854709ff25596a3ef22dfbca05e92f1ff3d6a203108384b68d0bc\",\"dweb:/ipfs/QmefbwvuniBmKstNVoCG4yZam1mp9N3UxuedhK2Yy5z6WW\"]},\"src/libraries/BytesLib.sol\":{\"keccak256\":\"0x9c9f897bb957a5a2b70513bdf0a404e4470c5d307e2438e44e88bcaa7f46491c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b462fe1fbafdd2fd1bac7410fd2a34400fb367e3c33c2939a0d9d3a6f9926f2e\",\"dweb:/ipfs/QmYficvpVbPDbzxoQT4vA2rRW9LRAVuLMjyz5QB3usm9uA\"]},\"src/token-bridge-relayer/TokenBridgeRelayer.sol\":{\"keccak256\":\"0xc82eaf288bb89095a0d0262f8dc848c9e6e00486bf1becdef774c9f9037dcc95\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://42d4e9b3e8ddb2966c98f1cc3c33a3780e419b3994836145298ef3abf718f766\",\"dweb:/ipfs/QmSeJf75KR8e6wcp7fXG9Y9VRPyyYYoM1s7hjohvi7U5db\"]},\"src/token-bridge-relayer/TokenBridgeRelayerGetters.sol\":{\"keccak256\":\"0x8530a304e756b00345714921a89bdb99077fe313f1257aff190f4351893e4364\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://0d6ace90fd1b21f8efa7f9ae41e0777ee8ba804cec6014b5e7b9b73addbeb950\",\"dweb:/ipfs/QmcnzXoWeQKxUXWH49N9pEgsuESCXXsbM7P54B7NWgJb8D\"]},\"src/token-bridge-relayer/TokenBridgeRelayerMessages.sol\":{\"keccak256\":\"0xf3b00583360cd5e5ec5a6a6a39b78432e36efd561ae94ad8478ceccd4650f9a4\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://3f16e9bb3c1e5666835473fa3fcbc2a286da6ddbe93609b336955cdea040ec67\",\"dweb:/ipfs/QmQdCz8qvUdrBhFXimHEgbNXBRNXYrG9k3nyfyyUkpmeeV\"]},\"src/token-bridge-relayer/TokenBridgeRelayerStructs.sol\":{\"keccak256\":\"0x599d74db75ded5d779a71af7cb043a6d55f706de4761a66498ddda495eebf28b\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e79187274d6ff9988a9bd876a55f278f85789ad0f031a69a4eb718831b42c690\",\"dweb:/ipfs/QmRoT8TW8Xyo4qWkrFiGYrxBhodFbDWm4ScqPizXVoRHes\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.19+commit.7dd6d404" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenBridge_",
              "type": "address"
            },
            { "internalType": "bool", "name": "unwrapWeth_", "type": "bool" },
            {
              "internalType": "address",
              "name": "executor_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "emitterChainId",
              "type": "uint16",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "emitterAddress",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TransferRedeemed",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "chainId",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "encoded", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "decodeTransferWithRelay",
          "outputs": [
            {
              "internalType": "struct TokenBridgeRelayerStructs.TransferWithRelay",
              "name": "transfer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "targetRecipient",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "uint8", "name": "decimals", "type": "uint8" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "denormalizeAmount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct TokenBridgeRelayerStructs.TransferWithRelay",
              "name": "transfer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "targetRecipient",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encodeTransferWithRelay",
          "outputs": [
            { "internalType": "bytes", "name": "encoded", "type": "bytes" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedTransferMessage",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeVAAv1"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "executor",
          "outputs": [
            {
              "internalType": "contract IExecutor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "payload", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "fetchLocalAddressFromTransferMessage",
          "outputs": [
            {
              "internalType": "address",
              "name": "localAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "uint8", "name": "decimals", "type": "uint8" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "normalizeAmount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenBridge",
          "outputs": [
            {
              "internalType": "contract ITokenBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenBridgeEmitter",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            {
              "internalType": "uint16",
              "name": "targetChain",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "targetRecipient",
              "type": "bytes32"
            },
            { "internalType": "uint32", "name": "nonce", "type": "uint32" },
            {
              "internalType": "bytes32",
              "name": "dstTransferRecipient",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dstExecutionAddress",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "executionAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "refundAddr",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "signedQuoteBytes",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "relayInstructions",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferTokensWithRelay",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "messageSequence",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unwrapWeth",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            { "internalType": "contract IWETH", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wormhole",
          "outputs": [
            {
              "internalType": "contract IWormhole",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "targetChain",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "targetRecipient",
              "type": "bytes32"
            },
            { "internalType": "uint32", "name": "nonce", "type": "uint32" },
            {
              "internalType": "bytes32",
              "name": "dstTransferRecipient",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dstExecutionAddress",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "executionAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "refundAddr",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "signedQuoteBytes",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "relayInstructions",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrapAndTransferEthWithRelay",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "messageSequence",
              "type": "uint64"
            }
          ]
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "decodeTransferWithRelay(bytes)": {
            "details": "reverts if: - the length of the payload has an unexpected length",
            "params": { "encoded": "Encoded `TransferWithRelay` struct." },
            "returns": { "transfer": "`TransferTokenRelay` struct." }
          },
          "encodeTransferWithRelay((bytes32))": {
            "params": { "transfer": "TransferWithRelay struct." },
            "returns": {
              "encoded": "TransferWithRelay struct encoded into bytes."
            }
          },
          "executeVAAv1(bytes)": {
            "details": "reverts if: - the transferred token is not accepted by this contract - the transferred token is not attested on this blockchain's Token Bridge contract - the emitter of the transfer message is not registered with this contract - the relayer fails to provide enough native assets to facilitate a native swap - the recipient attempts to swap native assets when performing a self redemption",
            "params": {
              "encodedTransferMessage": "Attested `TransferWithPayload` wormhole message."
            }
          },
          "fetchLocalAddressFromTransferMessage(bytes)": {
            "params": { "payload": "Encoded `TransferWithPayload` message" },
            "returns": {
              "localAddress": "Address of the encoded (bytes32 format) token address on this chain."
            }
          },
          "transferTokensWithRelay(address,uint256,uint16,bytes32,uint32,bytes32,bytes32,uint256,address,bytes,bytes)": {
            "params": {
              "amount": "Quantity of tokens to be transferred.",
              "dstExecutionAddress": "Executor destination address",
              "dstTransferRecipient": "Token Bridge payload 3 recipient",
              "executionAmount": "msg.value to be sent to the execution payee",
              "nonce": "Wormhole message nonce",
              "refundAddr": "Executor refund address on this chain",
              "relayInstructions": "Executor relay instructions",
              "signedQuoteBytes": "Executor signed quote",
              "targetChain": "Wormhole chain ID of the target blockchain.",
              "targetRecipient": "User's wallet address on the target blockchain in bytes32 format (zero-left-padded).",
              "token": "ERC20 token address to transfer cross chain."
            },
            "returns": {
              "messageSequence": "Wormhole sequence for emitted TransferTokensWithRelay message."
            }
          },
          "wrapAndTransferEthWithRelay(uint16,bytes32,uint32,bytes32,bytes32,uint256,address,bytes,bytes)": {
            "params": {
              "nonce": "Wormhole message nonce",
              "targetChain": "Wormhole chain ID of the target blockchain.",
              "targetRecipient": "User's wallet address on the target blockchain in bytes32 format (zero-left-padded)."
            },
            "returns": {
              "messageSequence": "Wormhole sequence for emitted TransferTokensWithRelay message."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "decodeTransferWithRelay(bytes)": {
            "notice": "Decodes an encoded `TransferWithRelay` struct."
          },
          "encodeTransferWithRelay((bytes32))": {
            "notice": "Encodes the TransferWithRelay struct into bytes."
          },
          "executeVAAv1(bytes)": {
            "notice": "Calls Wormhole's Token Bridge contract to complete token transfers. Takes custody of the wrapped (or released) tokens and sends the tokens to the target recipient. It pays the fee recipient in the minted token denomination. If requested by the user, it will perform a swap with the off-chain relayer to provide the user with native assets. If the `token` being transferred is WETH, the contract will unwrap native assets and send the transferred amount to the recipient and pay the fee recipient in native assets."
          },
          "fetchLocalAddressFromTransferMessage(bytes)": {
            "notice": "Parses the encoded address and chainId from a `TransferWithPayload` message. Finds the address of the wrapped token contract if the token is not native to this chain."
          },
          "transferTokensWithRelay(address,uint256,uint16,bytes32,uint32,bytes32,bytes32,uint256,address,bytes,bytes)": {
            "notice": "Calls Wormhole's Token Bridge contract to emit a contract-controlled transfer. The transfer message includes the target recipient on the destination chain."
          },
          "wrapAndTransferEthWithRelay(uint16,bytes32,uint32,bytes32,bytes32,uint256,address,bytes,bytes)": {
            "notice": "Wraps Ether and calls Wormhole's Token Bridge contract to emit a contract-controlled transfer. The transfer message includes an arbitrary payload with instructions for how to handle relayer payments on the target contract and the quantity of tokens to convert into native assets for the user."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "example-messaging-executor/=lib/example-messaging-executor/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/token-bridge-relayer/TokenBridgeRelayer.sol": "TokenBridgeRelayer"
      },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/example-messaging-executor/evm/src/interfaces/IExecutor.sol": {
        "keccak256": "0xb5c09cce4a0af879f212d1680cd63ef8c370337af5662239168ab8520913b907",
        "urls": [
          "bzz-raw://066dbed44d5ed38e2e19913402a75927729c85b356371858a7de68e8b340ea67",
          "dweb:/ipfs/QmZsQ4KWa8DG3fR3wxBUyfhh2GaxLWrm1C9HmTWHxxGX18"
        ],
        "license": "Apache-2.0"
      },
      "lib/example-messaging-executor/evm/src/interfaces/IVaaV1Receiver.sol": {
        "keccak256": "0x1c5e70da00f89331617b50a7c81798035101451e687a3107c8f30a5527a8e38c",
        "urls": [
          "bzz-raw://b436befbab84928f5e7b343b0bc6ebcc7f13c229b25c49d68eb622d97f814a1c",
          "dweb:/ipfs/QmYkY6vbeAfx6wbSgtyB16sTjM1wqwkxJtC2Ywamb6qZ2t"
        ],
        "license": "Apache-2.0"
      },
      "lib/example-messaging-executor/evm/src/libraries/ExecutorMessages.sol": {
        "keccak256": "0x2bb46d5001ab91fef5bdbac8527f869b5e7fc69d4bfde38aa097aca5ec55e282",
        "urls": [
          "bzz-raw://bfc98b4770aadb7e694813b0e906ed7b5712a36e162004e1960bb95a5e16eaea",
          "dweb:/ipfs/QmYktKKy49U2mRJVuCe6H22S47raZJzFMkpqtWbHXbd9g9"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "src/interfaces/ITokenBridge.sol": {
        "keccak256": "0x4ea5e85e7f4bb4ad38953215e34e0c038017d8e63ad7debdaa62866d423454e2",
        "urls": [
          "bzz-raw://cec54d81084ffe9a4062f607558433b6ff7a29205592b10ff6e1ed422ecd6a8f",
          "dweb:/ipfs/QmQZzbxZ1Gvd8ZMysaMGRsZKaJ8nNq1PRn3nZFNfvJ2iss"
        ],
        "license": "Apache 2"
      },
      "src/interfaces/IWETH.sol": {
        "keccak256": "0x0d4de7670ff7a9adbf8a6324857dc8366e8d9de6ad5c79a7b08c3a63a1e74846",
        "urls": [
          "bzz-raw://0476a6e90b24d12f75d3c0a1f389f31eda3e007c8f138c072514f7da5d21c56a",
          "dweb:/ipfs/QmSBCvNwWxY8WYnwHFbQw96b3cjX6mc3VEd8WKGN2cvuoM"
        ],
        "license": "Apache 2"
      },
      "src/interfaces/IWormhole.sol": {
        "keccak256": "0x6e96cd05a4d66c7edcb76c5dec50e1c36c7336eadf9e09d22d18fad99d784b71",
        "urls": [
          "bzz-raw://f0347c8b807854709ff25596a3ef22dfbca05e92f1ff3d6a203108384b68d0bc",
          "dweb:/ipfs/QmefbwvuniBmKstNVoCG4yZam1mp9N3UxuedhK2Yy5z6WW"
        ],
        "license": "Apache 2"
      },
      "src/libraries/BytesLib.sol": {
        "keccak256": "0x9c9f897bb957a5a2b70513bdf0a404e4470c5d307e2438e44e88bcaa7f46491c",
        "urls": [
          "bzz-raw://b462fe1fbafdd2fd1bac7410fd2a34400fb367e3c33c2939a0d9d3a6f9926f2e",
          "dweb:/ipfs/QmYficvpVbPDbzxoQT4vA2rRW9LRAVuLMjyz5QB3usm9uA"
        ],
        "license": "Unlicense"
      },
      "src/token-bridge-relayer/TokenBridgeRelayer.sol": {
        "keccak256": "0xc82eaf288bb89095a0d0262f8dc848c9e6e00486bf1becdef774c9f9037dcc95",
        "urls": [
          "bzz-raw://42d4e9b3e8ddb2966c98f1cc3c33a3780e419b3994836145298ef3abf718f766",
          "dweb:/ipfs/QmSeJf75KR8e6wcp7fXG9Y9VRPyyYYoM1s7hjohvi7U5db"
        ],
        "license": "Apache 2"
      },
      "src/token-bridge-relayer/TokenBridgeRelayerGetters.sol": {
        "keccak256": "0x8530a304e756b00345714921a89bdb99077fe313f1257aff190f4351893e4364",
        "urls": [
          "bzz-raw://0d6ace90fd1b21f8efa7f9ae41e0777ee8ba804cec6014b5e7b9b73addbeb950",
          "dweb:/ipfs/QmcnzXoWeQKxUXWH49N9pEgsuESCXXsbM7P54B7NWgJb8D"
        ],
        "license": "Apache 2"
      },
      "src/token-bridge-relayer/TokenBridgeRelayerMessages.sol": {
        "keccak256": "0xf3b00583360cd5e5ec5a6a6a39b78432e36efd561ae94ad8478ceccd4650f9a4",
        "urls": [
          "bzz-raw://3f16e9bb3c1e5666835473fa3fcbc2a286da6ddbe93609b336955cdea040ec67",
          "dweb:/ipfs/QmQdCz8qvUdrBhFXimHEgbNXBRNXYrG9k3nyfyyUkpmeeV"
        ],
        "license": "Apache 2"
      },
      "src/token-bridge-relayer/TokenBridgeRelayerStructs.sol": {
        "keccak256": "0x599d74db75ded5d779a71af7cb043a6d55f706de4761a66498ddda495eebf28b",
        "urls": [
          "bzz-raw://e79187274d6ff9988a9bd876a55f278f85789ad0f031a69a4eb718831b42c690",
          "dweb:/ipfs/QmRoT8TW8Xyo4qWkrFiGYrxBhodFbDWm4ScqPizXVoRHes"
        ],
        "license": "Apache 2"
      }
    },
    "version": 1
  },
  "id": 33
}
